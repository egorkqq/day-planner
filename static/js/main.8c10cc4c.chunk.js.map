{"version":3,"sources":["Calendar/index.js","Calendar/createDateObjects.js","Tooltip/index.js","Calendar/Cell.js","Search/index.js","Header/index.js","App.js","index.js"],"names":["Calendar","handleNextMonth","_this","props","onNextMonth","onChangeMonth","date","clone","add","handlePrevMonth","onPrevMonth","subtract","_this$props","this","weekOffset","renderDay","renderHeader","onPickDate","contentClassName","containerClassName","react_default","a","createElement","className","cx","arguments","length","undefined","startOfMonth","startOf","diff","weekday","prevMonthDays","i","push","day","classNames","currentMonthDays","daysInMonth","moment","year","month","daysAdded","nextMonthDays","concat","createDateObjects","map","Object","objectSpread","Component","Tooltip","state","event","names","description","onInput","e","setState","defineProperty","target","name","value","saveData","_this$state","openTooltip","updateCell","checkToExists","newData","JSON","parse","localStorage","getItem","filter","el","format","setItem","stringify","prevData","newDataItem","content","toConsumableArray","alert","clearData","_this$props2","setWrapperRef","node","wrapperRef","handleClickOutside","contains","data","document","addEventListener","removeEventListener","_this$state2","ref","onChange","placeholder","type","maxLength","rows","onClick","Cell","tooltipOpened","prevState","getDataFromStorage","_this2","dayName","isSame","role","tabIndex","onKeyDown","keyCode","src_Tooltip","getSuggestionValue","suggestion","renderSuggestion","react","Search","suggestions","_ref","newValue","onSuggestionsFetchRequested","_ref2","events","escapedValue","trim","replace","regex","RegExp","test","getSuggestions","onSuggestionsClearRequested","inputProps","dist_default","Header","window","location","reload","Search_Search","App","currentDate","setToday","renderExample","counter","src_Header","Calendar_Calendar","Calendar_Cell","key","charAt","toUpperCase","slice","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.8c10cc4c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport cx from 'classnames';\r\nimport createDateObjects from './createDateObjects';\r\nimport './styles.sass';\r\n\r\nexport default class Calendar extends Component {\r\n  handleNextMonth = () => {\r\n    if (this.props.onNextMonth) {\r\n      return this.props.onNextMonth();\r\n    }\r\n    this.props.onChangeMonth(this.props.date.clone().add(1, 'months'));\r\n  };\r\n\r\n  handlePrevMonth = () => {\r\n    if (this.props.onPrevMonth) {\r\n      return this.props.onPrevMonth();\r\n    }\r\n    this.props.onChangeMonth(this.props.date.clone().subtract(1, 'months'));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      date,\r\n      weekOffset,\r\n      renderDay,\r\n      renderHeader,\r\n      onPickDate,\r\n      contentClassName,\r\n      containerClassName,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={cx('Calendar', containerClassName)}>\r\n        {renderHeader({\r\n          date,\r\n          onPrevMonth: this.handlePrevMonth,\r\n          onNextMonth: this.handleNextMonth,\r\n        })}\r\n        <div className={cx('Calendar-grid', contentClassName)}>\r\n          {createDateObjects(date, weekOffset).map(day => renderDay({ ...day, onPickDate }))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import moment from 'moment';\r\n\r\nexport default function createDateObjects(date, weekOffset = 0) {\r\n  const startOfMonth = date.startOf('month');\r\n  let diff = startOfMonth.weekday() - weekOffset;\r\n  if (diff < 0) diff += 7;\r\n  const prevMonthDays = [];\r\n  for (let i = 0; i < diff; i++) {\r\n    prevMonthDays.push({\r\n      day: startOfMonth.clone().subtract(diff - i, 'days'),\r\n      classNames: 'prevMonth',\r\n    });\r\n  }\r\n  const currentMonthDays = [];\r\n  for (let i = 1; i < date.daysInMonth() + 1; i++) {\r\n    currentMonthDays.push({\r\n      day: moment([date.year(), date.month(), i]),\r\n    });\r\n  }\r\n  const daysAdded = prevMonthDays.length + currentMonthDays.length - 1;\r\n  const nextMonthDays = [];\r\n  let i = 1;\r\n  while ((daysAdded + i) % 7 !== 0) {\r\n    nextMonthDays.push({\r\n      day: currentMonthDays[currentMonthDays.length - 1].day.clone().add(i, 'days'),\r\n      classNames: 'nextMonth',\r\n    });\r\n    i += 1;\r\n  }\r\n  return [...prevMonthDays, ...currentMonthDays, ...nextMonthDays];\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styles.sass';\r\n\r\nclass Tooltip extends Component {\r\n  state = {\r\n    event: '',\r\n    names: '',\r\n    description: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { data } = this.props;\r\n    if (data) {\r\n      this.setState({\r\n        event: data.content.event,\r\n        names: data.content.names,\r\n        description: data.content.description,\r\n      });\r\n    }\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  onInput = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  saveData = () => {\r\n    const { event, names, description } = this.state;\r\n    const { day, openTooltip, updateCell } = this.props;\r\n\r\n    if (event && names) {\r\n      if (this.checkToExists()) {\r\n        const prevData = JSON.parse(localStorage.getItem('data'));\r\n        const newData = prevData.filter(el => +el.date !== +day.format('x'));\r\n        localStorage.setItem('data', JSON.stringify(newData));\r\n      }\r\n      const prevData = JSON.parse(localStorage.getItem('data'));\r\n      const newDataItem = {\r\n        date: day.format('x'),\r\n        content: { event, names, description },\r\n      };\r\n      const newData = [...prevData, newDataItem];\r\n      localStorage.setItem('data', JSON.stringify(newData));\r\n      openTooltip();\r\n      updateCell();\r\n    } else alert('Введите данные');\r\n  };\r\n\r\n  clearData = () => {\r\n    const { day, openTooltip, clearData } = this.props;\r\n    if (this.checkToExists()) {\r\n      const prevData = JSON.parse(localStorage.getItem('data'));\r\n      const newData = prevData.filter(el => +el.date !== +day.format('x'));\r\n      localStorage.setItem('data', JSON.stringify(newData));\r\n      clearData();\r\n      openTooltip();\r\n    } else {\r\n      alert('Вы еще ничего не запланировали на данное число');\r\n    }\r\n  };\r\n\r\n  checkToExists = () => {\r\n    const { day } = this.props;\r\n    const data = JSON.parse(localStorage.getItem('data')).filter(\r\n      el => +el.date === +day.format('x'),\r\n    );\r\n    if (data.length) return true;\r\n    return false;\r\n  };\r\n\r\n  setWrapperRef = node => {\r\n    this.wrapperRef = node;\r\n  };\r\n\r\n  handleClickOutside = event => {\r\n    const { openTooltip } = this.props;\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      openTooltip();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { event, names, description } = this.state;\r\n    const { openTooltip } = this.props;\r\n    return (\r\n      <div ref={this.setWrapperRef} className=\"Tooltip\">\r\n        <input\r\n          onChange={this.onInput}\r\n          name=\"event\"\r\n          placeholder=\"Событие\"\r\n          type=\"text\"\r\n          value={event}\r\n          className=\"Tooltip-input\"\r\n          maxLength=\"20\"\r\n        />\r\n        <input\r\n          onChange={this.onInput}\r\n          name=\"names\"\r\n          placeholder=\"Имена участников\"\r\n          type=\"text\"\r\n          value={names}\r\n          className=\"Tooltip-input\"\r\n          maxLength=\"40\"\r\n        />\r\n        <textarea\r\n          onChange={this.onInput}\r\n          name=\"description\"\r\n          placeholder=\"Описание\"\r\n          type=\"text\"\r\n          value={description}\r\n          className=\"Tooltip-textarea\"\r\n          rows=\"5\"\r\n        />\r\n        <div>\r\n          <button type=\"button\" onClick={this.saveData} className=\"Tooltip-button\">\r\n            {'Готово'}\r\n          </button>\r\n          <button type=\"button\" onClick={this.clearData} className=\"Tooltip-button\">\r\n            {'Удалить'}\r\n          </button>\r\n        </div>\r\n        <button type=\"button\" onClick={openTooltip} className=\"fas fa-times Tooltip-close\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tooltip;\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport cx from 'classnames';\r\nimport Tooltip from '../Tooltip';\r\n\r\nclass Cell extends Component {\r\n  state = {\r\n    tooltipOpened: false,\r\n    data: undefined,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromStorage();\r\n  }\r\n\r\n  openTooltip = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        tooltipOpened: !prevState.tooltipOpened,\r\n      };\r\n    });\r\n  };\r\n\r\n  getDataFromStorage = () => {\r\n    const { day } = this.props;\r\n    const data = JSON.parse(localStorage.getItem('data')).filter(\r\n      el => +el.date === +day.format('x'),\r\n    );\r\n    if (data.length) {\r\n      this.setState({\r\n        data: data[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  clearData = () => {\r\n    this.setState({ data: undefined });\r\n  };\r\n\r\n  render() {\r\n    const { day, classNames, dayName } = this.props;\r\n    const { tooltipOpened, data } = this.state;\r\n    return (\r\n      <div\r\n        className={cx(\r\n          'Calendar-grid-item',\r\n          day.isSame(moment(), 'day') && 'Calendar-grid-item--current',\r\n          classNames,\r\n        )}\r\n      >\r\n        <div\r\n          role=\"gridcell\"\r\n          tabIndex=\"0\"\r\n          className=\"Calendar-grid-item-content\"\r\n          onClick={this.openTooltip}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 13) {\r\n              this.openTooltip();\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"Calendar-grid-item-day\">\r\n            {dayName}\r\n            {day.format('D')}\r\n          </div>\r\n          {data && (\r\n            <div>\r\n              <div className=\"Calendar-grid-item-title\">{data.content.event}</div>\r\n              <div className=\"Calendar-grid-item-people\">{data.content.names}</div>\r\n            </div>\r\n          )}\r\n          <div />\r\n        </div>\r\n        {tooltipOpened && (\r\n          <Tooltip\r\n            data={data}\r\n            day={day}\r\n            openTooltip={this.openTooltip}\r\n            updateCell={this.getDataFromStorage}\r\n            clearData={this.clearData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport './styles.sass';\r\n\r\nfunction escapeRegexCharacters(str) {\r\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const events = JSON.parse(localStorage.getItem('data'));\r\n  const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n  if (escapedValue === '') {\r\n    return [];\r\n  }\r\n\r\n  const regex = new RegExp(escapedValue, 'i');\r\n  return events.filter(event => {\r\n    return regex.test(event.content.event) || regex.test(event.content.names);\r\n  });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.content.event;\r\n}\r\n\r\nfunction renderSuggestion(suggestion) {\r\n  return (\r\n    <Fragment>\r\n      <span className=\"react-autosuggest__suggestion__title\">{suggestion.content.event}</span>\r\n      <span className=\"react-autosuggest__suggestion__date\">\r\n        {moment(+suggestion.date).format('D MMMM')}\r\n      </span>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: 'Событие или участник',\r\n      value,\r\n      onChange: this.onChange,\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Search from '../Search';\r\nimport './styles.sass';\r\n\r\nclass Header extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Header\">\r\n        <button type=\"button\" className=\"Header-button\">\r\n          {'Добавить'}\r\n        </button>\r\n        <button type=\"button\" onClick={() => window.location.reload} className=\"Header-button\">\r\n          {'Обновить'}\r\n        </button>\r\n        <div className=\"Header-search\">\r\n          <i className=\"fas fa-search Header-search-button\" />\r\n          <Search />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component, Fragment } from 'react';\r\nimport moment from 'moment';\r\nimport Calendar from './Calendar';\r\nimport 'moment/locale/ru';\r\nimport Cell from './Calendar/Cell';\r\nimport Header from './Header';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    currentDate: moment(),\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.renderExample();\r\n  }\r\n\r\n  setToday = () => {\r\n    this.setState({ currentDate: moment() });\r\n  };\r\n\r\n  renderExample = () => {\r\n    if (!localStorage.data) {\r\n      localStorage.data = JSON.stringify([\r\n        {\r\n          date: '1547665200000',\r\n          content: {\r\n            event: 'Митинг на болотной',\r\n            names: 'Володя Пу, Дима Мищечкин',\r\n            description: 'Тестовое задание для iQ-dev',\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let counter = 7;\r\n    const { currentDate } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        <Calendar\r\n          onChangeMonth={date => this.setState({ currentDate: date })}\r\n          date={currentDate}\r\n          renderDay={({ day, classNames }) => {\r\n            counter -= 1;\r\n            if (counter >= 0) {\r\n              return (\r\n                <Cell\r\n                  key={day.format('x')}\r\n                  day={day}\r\n                  classNames={classNames}\r\n                  dayName={`${day\r\n                    .format('dddd')\r\n                    .charAt(0)\r\n                    .toUpperCase()}${day.format('dddd').slice(1)}, `}\r\n                />\r\n              );\r\n            }\r\n            return <Cell key={day.format('x')} day={day} classNames={classNames} />;\r\n          }}\r\n          renderHeader={({ date, onPrevMonth, onNextMonth }) => (\r\n            <div className=\"Calendar-header\">\r\n              <button type=\"button\" onClick={onPrevMonth}>\r\n                <i className=\"fas fa-angle-left\" />\r\n              </button>\r\n              <div className=\"Calendar-header-currentDate\">\r\n                {date\r\n                  .format('MMMM YYYY')\r\n                  .charAt(0)\r\n                  .toUpperCase() + date.format('MMMM YYYY').slice(1)}\r\n              </div>\r\n              <button type=\"button\" onClick={onNextMonth}>\r\n                <i className=\"fas fa-angle-right\" />\r\n              </button>\r\n              <button type=\"button\" onClick={this.setToday}>\r\n                {'Сегодня'}\r\n              </button>\r\n            </div>\r\n          )}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","/* global document */\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}